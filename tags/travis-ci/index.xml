<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Travis Ci on studyroom</title>
    <link>https://ironpark.github.io/tags/travis-ci/</link>
    <description>Recent content in Travis Ci on studyroom</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>ironpark</copyright>
    <lastBuildDate>Sun, 17 Dec 2017 18:37:22 +0900</lastBuildDate>
    
	<atom:link href="https://ironpark.github.io/tags/travis-ci/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Travis Ci 를 이용해서 Hugo 기반 웹사이트 배포 하기</title>
      <link>https://ironpark.github.io/2017/12/17/hugo-site-deploy-use-travis-ci/</link>
      <pubDate>Sun, 17 Dec 2017 18:37:22 +0900</pubDate>
      
      <guid>https://ironpark.github.io/2017/12/17/hugo-site-deploy-use-travis-ci/</guid>
      <description>정적 웹사이트 생성기의 불편 기본적으로 정적 웹사이트 생성기 (static site generator) 를 사용해서 블로그를 운영할때 단점은, 블로그에 대한 소스에 대한 저장소와 최종적으로 생성된 정적 웹사이트의 소스가 저장되는 (github pages) 저장소가 별도로 관리되기 때문에.
새포스트 작성 &amp;gt; 커밋&amp;amp;푸시(블로그 소스 저장소) &amp;gt; 빌드 &amp;gt; 커밋&amp;amp;푸시(호스팅 저장소)
위와 같은 워크플로우를 가지게 된다. 간단하지만 매번 하기에는 귀찮은 일이기도 하며 기존의 블로그 서비스(네이버,티스토리,이글루스 등..) 들을 이용할때는 경험하기 힘든? 부분이다.
이번 포스트에서는 Travis CI 를 이용하여 워크플로우를 다음과 같이 단축 하는 법에 대해서 알아 보자.</description>
    </item>
    
  </channel>
</rss>